name: Build, Push Docker Image and Notify Sub Projects

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Notify on Telegram
        run: |
          TIMESTAMP=$(TZ=Asia/Manila date +"%Y-%m-%d %H:%M:%S %Z %z")
          
          MESSAGE="üöÄ GitHub Action triggered%0A"
          MESSAGE+="üì¶ Repository: ${{ github.repository }}%0A"
          MESSAGE+="üå± Branch: ${{ github.ref }}%0A"
          MESSAGE+="üïí Triggered at: ${TIMESTAMP}"
          
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
            -d "chat_id=${{ secrets.TELEGRAM_CHAT_ID }}" \
            -d "text=${MESSAGE}"

      - name: Build and Push Docker Image
        run: |
          docker buildx build --platform linux/amd64 \
          -t ghcr.io/${{ github.actor }}/docker-slimvnc:latest --push .

  notify:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Wait for 2 Minutes with Countdown
        run: |
          for i in {120..1}; do
            echo "‚è≥ Waiting... $i seconds remaining"
            sleep 1
          done

      - name: Dispatch to Sub Projects
        env:
          GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        run: |
          REPOS=("techroy23/Docker-Peer2Profit" "techroy23/Docker-Wipter" "techroy23/Docker-UrNetwork")

          for REPO in "${REPOS[@]}"; do
            echo "üîÑ Sending dispatch to $REPO..."
            RESPONSE=$(curl -s -X POST \
              -H "Authorization: token $GHCR_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/$REPO/actions/workflows/docker-publish.yml/dispatches \
              -d '{"ref":"main"}')

            echo "‚úÖ Response from GitHub: $RESPONSE"

            if [[ "$RESPONSE" == *"Bad credentials"* ]]; then
              echo "‚ùå Error: Invalid GitHub token!"
              exit 1
            fi
          done
